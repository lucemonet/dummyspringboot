name: Generate coverage report

on:
  workflow_dispatch:

  push:
    branches: master


permissions:
  contents: read
  actions: read
  checks: write
  pages: write
  id-token: write

jobs:
  env:
    timezone:
      required: false
      type: string
    java-version:
      required: false
      default: "21"
      type: string
    java-distribution:
      required: false
      default: "temurin"
      type: string
    min-coverage-overall:
      required: false
      default: 80
      type: number
    packages-user-name:
      required: true
      type: string
      description: "GitHub user name, owner of token."
    pass-emoji:
      required: false
      default: ‚úîÔ∏è
      type: string
    fail-emoji:
      required: false
      default: ü•∫
      type: string
    maven-settings-file-path:
      required: false
      default: settings.xml
      type: string
    working-directory:
      required: false
      default: .
      type: string
  #    secrets:
  #      packages-user-token:
  #        required: true
  #        description: "GitHub PAT for the user with correct permissions to do build."
  build-test:
    environment:
      name: github-pages-deploy
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
        shell: bash

    steps:
      - if: ${{ inputs.timezone != '' }}
        name: Set timezone to ${{ inputs.timezone }}
        run: |
          sudo timedatectl set-timezone ${{ inputs.timezone }}

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: "maven"

      - name: Build & Run Tests
        env:
          PACKAGES_USER_NAME: ${{ inputs.packages-user-name }}
          PACKAGES_USER_TOKEN: ${{ secrets.packages-user-token}}
        run: mvn --settings ${{ inputs.maven-settings-file-path }} clean verify --no-transfer-progress

      - name: Publish Tests Report
        uses: dorny/test-reporter@afe6793191b75b608954023a46831a3fe10048d4 # v1.7.0
        if: success()
        with:
          name: JUnit Tests Report
          path: "**/target/**/TEST-*.xml"
          reporter: java-junit

      - name: Package relevant files
        run: |
          mkdir app/target/coverage_report/
          cp -R app/target/**/TEST-*.xml app/target/coverage_report/
          echo " **** FILES INSIDE REPORT ARE: ****"
          ls -la app/target/coverage_report

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        id: deployment
        with:
          path: "app/target/coverage_report"

  # Publish to GH pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Deploy Test Report to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4