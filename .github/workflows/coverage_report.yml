name: Generate coverage report

on:
  workflow_dispatch:

  push:


permissions:
  contents: read
  actions: read
  checks: write
  pages: write
  id-token: write

jobs:
  build-test:
    env:
      java-version: "21"
      java-distribution: "temurin"
      min-coverage-overall: 80
      packages-user-name: "lucemonet"
      pass-emoji: "‚úîÔ∏è"

      fail-emoji: "ü•∫"

      maven-settings-file-path: "settings.xml"
      working-directory: "."
    environment:
      name: github-pages-deploy
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
        shell: bash

    steps:
      - if: ${{ env.timezone != '' }}
        name: Set timezone to ${{ env.timezone }}
        run: |
          sudo timedatectl set-timezone ${{ env.timezone }}

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java-version }}
          distribution: ${{ env.java-distribution }}
          cache: "maven"

      - name: Build & Run Tests
        env:
          PACKAGES_USER_NAME: ${{ env.packages-user-name }}
          PACKAGES_USER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn --settings ${{ env.maven-settings-file-path }} clean verify --no-transfer-progress

      - name: Generate JUnit Tests Report
        uses: dorny/test-reporter@afe6793191b75b608954023a46831a3fe10048d4 # v1.7.0
        if: success()
        with:
          name: JUnit Tests Report
          path: "**/target/**/TEST-*.xml"
          reporter: java-junit

      - name: Makey JaCoCo Report
        uses: madrapps/jacoco-report@db72e7e7c96f98d239967958b0a0a6ca7d3bb45f # v1.6.1
        if: success()  # run only if previous steps succeeded and it is a PR
        with:
          paths: "./jacoco.xml"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: ü§ñ Java Code Coverage
          min-coverage-overall: ${{ env.min-coverage-overall }}
          update-comment: ${{ env.update-comment }}
          pass-emoji: ${{ env.pass-emoji }}
          fail-emoji: ${{ env.fail-emoji }}
          debug-mode: 'true'

      - name: Package relevant files
        run: |
          pwd
          ls -la target
          mkdir results
          find . -name TEST-*.xml -exec cp {} ./results \;
          touch index.html
          echo "<h1>Test Results</h1>" >> index.html
          cat ./results/TEST-*.xml >> index.html
          mv index.html ./results

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        id: deployment
        with:
          path: "./results"

  # Publish to GH pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Deploy Test Report to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4